{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"color\", \"icon\", \"pro\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SolidIcons, RegularIcons, BrandIcons, parseIconFromClassName } from \"./FontAwesomeIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Icon = function (_Component) {\n  _inherits(Icon, _Component);\n  var _super = _createSuper(Icon);\n  function Icon() {\n    _classCallCheck(this, Icon);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Icon, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var _this$props = this.props,\n        style = _this$props.style,\n        color = _this$props.color,\n        icon = _this$props.icon,\n        pro = _this$props.pro,\n        props = _objectWithoutProperties(_this$props, _excluded);\n      var _split = (icon || '').split('|'),\n        _split2 = _slicedToArray(_split, 2),\n        code = _split2[0],\n        type = _split2[1];\n      var IconType = type === 'brand' ? BrandIcons : type === 'regular' ? RegularIcons : SolidIcons;\n      var font = {\n        fontFamily: IconType._fontFamily || ''\n      };\n      if (pro) {\n        font.fontFamily = font.fontFamily.replace('Free', 'Pro');\n      }\n      return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n        style: [styles.icon, {\n          color: color\n        }, style, font],\n        ref: function ref(component) {\n          return _this._root = component;\n        },\n        children: code\n      }));\n    }\n  }]);\n  return Icon;\n}(Component);\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport { SolidIcons, RegularIcons, BrandIcons, parseIconFromClassName };\nexport default Icon;","map":{"version":3,"names":["React","Component","Text","StyleSheet","SolidIcons","RegularIcons","BrandIcons","parseIconFromClassName","jsx","_jsx","Icon","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","setNativeProps","nativeProps","_root","render","_this","_this$props","props","style","color","icon","pro","_objectWithoutProperties","_excluded","_split","split","_split2","_slicedToArray","code","type","IconType","font","fontFamily","_fontFamily","replace","_objectSpread","styles","ref","component","children","create","backgroundColor"],"sources":["/home/temo/Desktop/working/Android/Climbing In Georgia Mobile/node_modules/react-native-fontawesome/Icon.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, StyleSheet } from 'react-native';\r\n\r\nimport { SolidIcons, RegularIcons, BrandIcons, parseIconFromClassName } from './FontAwesomeIcons';\r\n\r\nclass Icon extends Component {\r\n  setNativeProps(nativeProps) {\r\n    this._root.setNativeProps(nativeProps);\r\n  }\r\n\r\n  render() {\r\n    const { style, color, icon, pro, ...props } = this.props;\r\n    const [code, type] = (icon || '').split('|')\r\n\r\n    const IconType = type === 'brand' ? BrandIcons :\r\n                     type === 'regular' ? RegularIcons\r\n                     : SolidIcons\r\n\r\n    const font = { fontFamily: IconType._fontFamily || '' }\r\n\r\n    if (pro) {\r\n      font.fontFamily = font.fontFamily.replace('Free', 'Pro')\r\n    }\r\n\r\n    return (\r\n      <Text\r\n        {...props}\r\n        style={[styles.icon, { color }, style, font]}\r\n        ref={component => this._root = component}\r\n      >\r\n        {code}\r\n      </Text>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    backgroundColor: 'transparent'\r\n  },\r\n});\r\n\r\nexport { SolidIcons, RegularIcons, BrandIcons, parseIconFromClassName };\r\nexport default Icon;\r\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGzC,SAASC,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAEC,sBAAsB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,IAE5FC,IAAI,aAAAC,UAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,IAAA;EAAA,SAAAA,KAAA;IAAAK,eAAA,OAAAL,IAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,IAAA;IAAAS,GAAA;IAAAC,KAAA,EACR,SAAAC,eAAeC,WAAW,EAAE;MAC1B,IAAI,CAACC,KAAK,CAACF,cAAc,CAACC,WAAW,CAAC;IACxC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAI,OAAA,EAAS;MAAA,IAAAC,KAAA;MACP,IAAAC,WAAA,GAA8C,IAAI,CAACC,KAAK;QAAhDC,KAAK,GAAAF,WAAA,CAALE,KAAK;QAAEC,KAAK,GAAAH,WAAA,CAALG,KAAK;QAAEC,IAAI,GAAAJ,WAAA,CAAJI,IAAI;QAAEC,GAAG,GAAAL,WAAA,CAAHK,GAAG;QAAKJ,KAAK,GAAAK,wBAAA,CAAAN,WAAA,EAAAO,SAAA;MACzC,IAAAC,MAAA,GAAqB,CAACJ,IAAI,IAAI,EAAE,EAAEK,KAAK,CAAC,GAAG,CAAC;QAAAC,OAAA,GAAAC,cAAA,CAAAH,MAAA;QAArCI,IAAI,GAAAF,OAAA;QAAEG,IAAI,GAAAH,OAAA;MAEjB,IAAMI,QAAQ,GAAGD,IAAI,KAAK,OAAO,GAAGjC,UAAU,GAC7BiC,IAAI,KAAK,SAAS,GAAGlC,YAAY,GAC/BD,UAAU;MAE7B,IAAMqC,IAAI,GAAG;QAAEC,UAAU,EAAEF,QAAQ,CAACG,WAAW,IAAI;MAAG,CAAC;MAEvD,IAAIZ,GAAG,EAAE;QACPU,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACC,UAAU,CAACE,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;MAC1D;MAEA,OACEnC,IAAA,CAACP,IAAI,EAAA2C,aAAA,CAAAA,aAAA,KACClB,KAAK;QACTC,KAAK,EAAE,CAACkB,MAAM,CAAChB,IAAI,EAAE;UAAED,KAAK,EAALA;QAAM,CAAC,EAAED,KAAK,EAAEa,IAAI,CAAE;QAC7CM,GAAG,EAAE,SAAAA,IAAAC,SAAS;UAAA,OAAIvB,KAAI,CAACF,KAAK,GAAGyB,SAAS;QAAA,CAAC;QAAAC,QAAA,EAExCX;MAAI,GACA;IAEX;EAAC;EAAA,OAAA5B,IAAA;AAAA,EA5BgBT,SAAS;AA+B5B,IAAM6C,MAAM,GAAG3C,UAAU,CAAC+C,MAAM,CAAC;EAC/BpB,IAAI,EAAE;IACJqB,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,SAAS/C,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAEC,sBAAsB;AACrE,eAAeG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}